{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\nimport { getDoc, getFirestore, doc } from \"firebase/firestore\";\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDS-isgzwpVSTmeISq9t-3x0iDQe0A5a0g\",\n  authDomain: \"phototagging-5a719.firebaseapp.com\",\n  projectId: \"phototagging-5a719\",\n  storageBucket: \"phototagging-5a719.appspot.com\",\n  messagingSenderId: \"706196984767\",\n  appId: \"1:706196984767:web:de874bbcdfdc617da9470a\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst firestore = getFirestore(app);\nexport async function getAllLocations() {\n  const Crash = doc(firestore, \"location/Crash\");\n  const Spyro = doc(firestore, \"location/Spyro\");\n  const crashSnap = await getDoc(Crash);\n  const spyroSnap = await getDoc(Spyro);\n  const crashData = crashSnap.data();\n  const spyroData = spyroSnap.data();\n  return {\n    Crash: [crashData.X, crashData.Y],\n    Spyro: [spyroData.X, spyroData.Y]\n  };\n}\nexport async function ashLocation() {\n  const Ash = doc(firestore, \"location/Ash\");\n  const ashSnap = await getDoc(Ash);\n  const ashData = ashSnap.data();\n  return [ashData.X, ashData.Y];\n}\nexport async function spyroLocation() {\n  const Spyro = doc(firestore, \"location/Spyro\");\n  const spyroSnap = await getDoc(Spyro);\n  const spyroData = spyroSnap.data();\n  return [spyroData.X, spyroData.Y];\n}\nexport async function crashLocation() {\n  const Crash = doc(firestore, \"location/Crash\");\n  const crashSnap = await getDoc(Crash);\n  const crashData = crashSnap.data();\n  return [crashData.X, crashData.Y];\n}","map":{"version":3,"names":["initializeApp","getDoc","getFirestore","doc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","getAllLocations","Crash","Spyro","crashSnap","spyroSnap","crashData","data","spyroData","X","Y","ashLocation","Ash","ashSnap","ashData","spyroLocation","crashLocation"],"sources":["/home/shrawn/Documents/Find-The-Character/find-the-character/src/firebase-config.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\nimport { getDoc, getFirestore, doc } from \"firebase/firestore\";\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDS-isgzwpVSTmeISq9t-3x0iDQe0A5a0g\",\n  authDomain: \"phototagging-5a719.firebaseapp.com\",\n  projectId: \"phototagging-5a719\",\n  storageBucket: \"phototagging-5a719.appspot.com\",\n  messagingSenderId: \"706196984767\",\n  appId: \"1:706196984767:web:de874bbcdfdc617da9470a\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst firestore = getFirestore(app);\n\nexport async function getAllLocations() {\n  const Crash = doc(firestore, \"location/Crash\");\n  const Spyro = doc(firestore, \"location/Spyro\");\n\n  const crashSnap = await getDoc(Crash);\n  const spyroSnap = await getDoc(Spyro);\n\n  const crashData = crashSnap.data();\n  const spyroData = spyroSnap.data();\n\n  return {\n    Crash: [crashData.X, crashData.Y],\n    Spyro: [spyroData.X, spyroData.Y],\n  };\n}\nexport async function ashLocation() {\n  const Ash = doc(firestore, \"location/Ash\");\n  const ashSnap = await getDoc(Ash);\n  const ashData = ashSnap.data();\n  return [ashData.X, ashData.Y];\n}\nexport async function spyroLocation() {\n  const Spyro = doc(firestore, \"location/Spyro\");\n  const spyroSnap = await getDoc(Spyro);\n  const spyroData = spyroSnap.data();\n  return [spyroData.X, spyroData.Y];\n}\n\nexport async function crashLocation() {\n  const Crash = doc(firestore, \"location/Crash\");\n  const crashSnap = await getDoc(Crash);\n  const crashData = crashSnap.data();\n  return [crashData.X, crashData.Y];\n}"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C;AACA;AACA,SAASC,MAAM,EAAEC,YAAY,EAAEC,GAAG,QAAQ,oBAAoB;AAC9D;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,oCAAoC;EAChDC,SAAS,EAAE,oBAAoB;EAC/BC,aAAa,EAAE,gCAAgC;EAC/CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGX,aAAa,CAACI,cAAc,CAAC;AACzC,MAAMQ,SAAS,GAAGV,YAAY,CAACS,GAAG,CAAC;AAEnC,OAAO,eAAeE,eAAeA,CAAA,EAAG;EACtC,MAAMC,KAAK,GAAGX,GAAG,CAACS,SAAS,EAAE,gBAAgB,CAAC;EAC9C,MAAMG,KAAK,GAAGZ,GAAG,CAACS,SAAS,EAAE,gBAAgB,CAAC;EAE9C,MAAMI,SAAS,GAAG,MAAMf,MAAM,CAACa,KAAK,CAAC;EACrC,MAAMG,SAAS,GAAG,MAAMhB,MAAM,CAACc,KAAK,CAAC;EAErC,MAAMG,SAAS,GAAGF,SAAS,CAACG,IAAI,EAAE;EAClC,MAAMC,SAAS,GAAGH,SAAS,CAACE,IAAI,EAAE;EAElC,OAAO;IACLL,KAAK,EAAE,CAACI,SAAS,CAACG,CAAC,EAAEH,SAAS,CAACI,CAAC,CAAC;IACjCP,KAAK,EAAE,CAACK,SAAS,CAACC,CAAC,EAAED,SAAS,CAACE,CAAC;EAClC,CAAC;AACH;AACA,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,MAAMC,GAAG,GAAGrB,GAAG,CAACS,SAAS,EAAE,cAAc,CAAC;EAC1C,MAAMa,OAAO,GAAG,MAAMxB,MAAM,CAACuB,GAAG,CAAC;EACjC,MAAME,OAAO,GAAGD,OAAO,CAACN,IAAI,EAAE;EAC9B,OAAO,CAACO,OAAO,CAACL,CAAC,EAAEK,OAAO,CAACJ,CAAC,CAAC;AAC/B;AACA,OAAO,eAAeK,aAAaA,CAAA,EAAG;EACpC,MAAMZ,KAAK,GAAGZ,GAAG,CAACS,SAAS,EAAE,gBAAgB,CAAC;EAC9C,MAAMK,SAAS,GAAG,MAAMhB,MAAM,CAACc,KAAK,CAAC;EACrC,MAAMK,SAAS,GAAGH,SAAS,CAACE,IAAI,EAAE;EAClC,OAAO,CAACC,SAAS,CAACC,CAAC,EAAED,SAAS,CAACE,CAAC,CAAC;AACnC;AAEA,OAAO,eAAeM,aAAaA,CAAA,EAAG;EACpC,MAAMd,KAAK,GAAGX,GAAG,CAACS,SAAS,EAAE,gBAAgB,CAAC;EAC9C,MAAMI,SAAS,GAAG,MAAMf,MAAM,CAACa,KAAK,CAAC;EACrC,MAAMI,SAAS,GAAGF,SAAS,CAACG,IAAI,EAAE;EAClC,OAAO,CAACD,SAAS,CAACG,CAAC,EAAEH,SAAS,CAACI,CAAC,CAAC;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}